import redis
from match import Matcher
          
#
# This test verifies the VERTEX and EDGE type tree features#

def SD_102_Traversing_TypeTree(cluster_id, controller, data, index):
    matcher = Matcher("SD_101_Non_Intrusive_Indexing_And_Full_Text_Queries")
    
    scenario = [
        {"step": "DATA NO KEYS", "node": data, "command": "keys *", "expects": []},
        {"step": "INDEX NO KEYS", "node": index, "command": "keys *", "expects": []},
        {"step": "NO RULES", "node": data, "command": "RULE.LIST", "expects": b'No rules defined'},
        {"step": "get test data", "node": data, "command": "g.wget https://roxoft.dev/assets/products.txt", "expects": b'products.txt'},
        {"step": "load test data", "node": data, "command": "LOAD.TEXT CRLF TAB_SEPARATED FROM products.txt as_hash", "expects": b'OK'},
        
        {"step": "Setup type tree whiskies", "node": data, "command": "rxtypetree whiskies whiskey bourbon whisky", "expects": b'`whiskies'},
        {"step": "Setup type tree tree alcoholic", "node": data, "command": "rxtypetree alcoholic whiskies wine beer liqueur", "expects": b'`alcoholic'},
        {"step": "Setup type tree all beverages", "node": data, "command": "rxtypetree beverages alcoholic water pop energy", "expects": b'`beverages'},
        {"step": "wait indexing completed", "node": data, "command": "rxIndex wait", "expects": b'OK'},

        {"step": "verify TRAVERSE whiskies", "node":data, "command": "rxquery G:v(whiskies)", "expects": [[b'key', b'w1'], [b'key', b'w10'], [b'key', b'w11'], [b'key', b'w12'], [b'key', b'w13'], [b'key', b'w14'], [b'key', b'w2'], [b'key', b'w3'], [b'key', b'w4'], [b'key', b'w5'], [b'key', b'w6'], [b'key', b'w7'], [b'key', b'w8'], [b'key', b'w9']], "strip": [b'value',b'score', b'type']},
        {"step": "verify TRAVERSE alcoholic", "node":data, "command": "rxquery G:v(alcoholic)", "expects": [[b'key', b'beer1'], [b'key', b'beer2'], [b'key', b'beer3'], [b'key', b'beer4'], [b'key', b'beer5'], [b'key', b'beer6'], [b'key', b'beer7'], [b'key', b'liqor1'], [b'key', b'w1'], [b'key', b'w10'], [b'key', b'w11'], [b'key', b'w12'], [b'key', b'w13'], [b'key', b'w14'], [b'key', b'w2'], [b'key', b'w3'], [b'key', b'w4'], [b'key', b'w5'], [b'key', b'w6'], [b'key', b'w7'], [b'key', b'w8'], [b'key', b'w9'], [b'key', b'wine1'], [b'key', b'wine2'], [b'key', b'wine3'], [b'key', b'wine4'], [b'key', b'wine5'], [b'key', b'wine6']], "strip": [b'value',b'score', b'type']},
        {"step": "verify TRAVERSE beverages", "node":data, "command": "rxquery G:v(beverages)", "expects": [[b'key', b'beer1', b'score', b'1', b'value', [b'brand', b'amstel', b'model', b'lager', b'type', b'beer', b'country', b'netherlands']], [b'key', b'beer2', b'score', b'1', b'value', [b'brand', b'heineken', b'model', b'lager', b'type', b'beer', b'country', b'netherlands']], [b'key', b'beer3', b'score', b'1', b'value', [b'brand', b'grolsch', b'model', b'lager', b'type', b'beer', b'country', b'netherlands']], [b'key', b'beer4', b'score', b'1', b'value', [b'brand', b'grolsch', b'model', b'kanon', b'type', b'beer', b'country', b'netherlands']], [b'key', b'beer5', b'score', b'1', b'value', [b'brand', b'guiness', b'model', b'stout', b'type', b'beer', b'country', b'ireland']], [b'key', b'beer6', b'score', b'1', b'value', [b'brand', b'buddweiser', b'model', b'lager', b'type', b'beer', b'country', b'usa']], [b'key', b'beer7', b'score', b'1', b'value', [b'brand', b'stella artois', b'model', b'lager', b'type', b'beer', b'country', b'belgium']], [b'key', b'energy1', b'score', b'1', b'value', [b'brand', b'redBull', b'type', b'energy', b'country', b'usa']], [b'key', b'energy2', b'score', b'1', b'value', [b'brand', b'c4', b'type', b'energy', b'country', b'usa']], [b'key', b'energy3', b'score', b'1', b'value', [b'brand', b'monsterEnergy', b'type', b'energy', b'country', b'usa']], [b'key', b'energy4', b'score', b'1', b'value', [b'brand', b'rockstar', b'type', b'energy', b'country', b'usa']], [b'key', b'energy5', b'score', b'1', b'value', [b'brand', b'prime', b'type', b'energy', b'country', b'usa']], [b'key', b'energy6', b'score', b'1', b'value', [b'brand', b'kickstart', b'type', b'energy', b'country', b'usa']], [b'key', b'energy7', b'score', b'1', b'value', [b'brand', b'v8', b'type', b'energy', b'country', b'usa']], [b'key', b'energy8', b'score', b'1', b'value', [b'brand', b'gorilla', b'type', b'energy', b'country', b'usa\r\n']], [b'key', b'liqor1', b'score', b'1', b'value', [b'brand', b'cointreau', b'type', b'liqueur', b'country', b'france']], [b'key', b'soft1', b'score', b'1', b'value', [b'brand', b'sevenUp', b'type', b'pop', b'country', b'usa']], [b'key', b'soft2', b'score', b'1', b'value', [b'brand', b'pepsiCola', b'type', b'pop', b'country', b'usa']], [b'key', b'soft3', b'score', b'1', b'value', [b'brand', b'cocaCola', b'type', b'pop', b'country', b'usa']], [b'key', b'soft4', b'score', b'1', b'value', [b'brand', b'sprite', b'type', b'pop', b'country', b'usa']], [b'key', b'soft5', b'score', b'1', b'value', [b'brand', b'fanta', b'type', b'pop', b'country', b'usa']], [b'key', b'w1', b'score', b'1', b'value', [b'brand', b'glenrothes', b'model', b'25 years', b'type', b'whisky', b'country', b'scotland']], [b'key', b'w10', b'score', b'1', b'value', [b'brand', b'bushmills black bush', b'type', b'whisky', b'country', b'ireland']], [b'key', b'w11', b'score', b'1', b'value', [b'brand', b'bushmills single malt', b'type', b'whisky', b'country', b'ireland']], [b'key', b'w12', b'score', b'1', b'value', [b'brand', b'jack daniels', b'model', b'old no 7', b'type', b'whiskey', b'country', b'usa']], [b'key', b'w13', b'score', b'1', b'value', [b'brand', b'makers mark', b'type', b'bourbon', b'country', b'usa']], [b'key', b'w14', b'score', b'1', b'value', [b'brand', b'suntory', b'type', b'whiskey', b'country', b'japan']], [b'key', b'w2', b'score', b'1', b'value', [b'brand', b'royal bracklia', b'model', b'16 years', b'type', b'whisky', b'country', b'scotland']], [b'key', b'w3', b'score', b'1', b'value', [b'brand', b'ainneamh', b'model', b'27 years', b'type', b'whisky', b'country', b'scotland']], [b'key', b'w4', b'score', b'1', b'value', [b'brand', b'lock lomond', b'model', b'16 years', b'type', b'whisky', b'country', b'scotland']], [b'key', b'w5', b'score', b'1', b'value', [b'brand', b'highland park', b'model', b'15 years', b'type', b'whisky', b'country', b'scotland']], [b'key', b'w6', b'score', b'1', b'value', [b'brand', b'johnnie walker', b'model', b'black label', b'type', b'whisky', b'country', b'scotland']], [b'key', b'w7', b'score', b'1', b'value', [b'brand', b'laphroaig', b'type', b'whisky', b'country', b'scotland']], [b'key', b'w8', b'score', b'1', b'value', [b'brand', b'tullamore dew', b'type', b'whisky', b'country', b'ireland']], [b'key', b'w9', b'score', b'1', b'value', [b'brand', b'jameson', b'type', b'whisky', b'country', b'ireland']], [b'key', b'water1', b'score', b'1', b'value', [b'brand', b'perrier', b'model', b'water', b'type', b'water', b'country', b'france']], [b'key', b'water2', b'score', b'1', b'value', [b'brand', b'spa', b'model', b'water', b'type', b'water', b'country', b'netherlands']], [b'key', b'water3', b'score', b'1', b'value', [b'brand', b'fiji', b'model', b'water', b'type', b'water', b'country', b'usa']], [b'key', b'water4', b'score', b'1', b'value', [b'brand', b'evian', b'model', b'water', b'type', b'water', b'country', b'usa']], [b'key', b'wine1', b'score', b'1', b'value', [b'brand', b'beaujolais', b'model', b'burgundy', b'type', b'wine', b'country', b'france']], [b'key', b'wine2', b'score', b'1', b'value', [b'brand', b'medoc', b'model', b'bordeaux', b'type', b'wine', b'country', b'france']], [b'key', b'wine3', b'score', b'1', b'value', [b'brand', b'pinot noir', b'model', b'burgundy', b'type', b'wine', b'country', b'france']], [b'key', b'wine4', b'score', b'1', b'value', [b'brand', b'st emilion', b'model', b'bordeaux', b'type', b'wine', b'country', b'france']], [b'key', b'wine5', b'score', b'1', b'value', [b'brand', b'merlot', b'model', b'bordeaux', b'type', b'wine', b'country', b'france']], [b'key', b'wine6', b'score', b'1', b'value', [b'brand', b'rottschild', b'model', b'bordeaux', b'type', b'wine', b'country', b'france']]]},
    ]
    matcher.play(scenario)

