from __future__ import print_function
# from colorama import Fore, Back, Style
import time
import redis
import json
import pdb
from match import match, reset_match_calls, get_match_calls

global redis_path
def column(matrix, i):
    return [row[i] for row in matrix]

def SD_103_Business_Rules_Data_Augmentation(cluster_id, controller, data, index):
    # pdb.set_trace()
    reset_match_calls()
    succes_tally = 0
    succes_tally += match("ZERO DATA KEYS", data.execute_command("keys", "*"), "{}".format([]))
    succes_tally += match("ZERO INDEX KEYS", index.execute_command("keys", "*"), "{}".format([]))

    succes_tally += match("rule list", data.execute_command("RULE.LIST"), 
                          "{}".format(b'No rules defined'))
    
    succes_tally += match("get dataset",data.execute_command("g.wget", "https://roxoft.dev/assets/dataset2.txt").decode(), 
                          'dataset2.txt')
    succes_tally += match("add rule linkFather",data.execute_command("RULE.SET", "linkFather", "(haslabel(father).addE(@,father,father_of))" ).decode(), 
                          'Rule for: linkFather Expression: Expression appears to be incorrect!')
    succes_tally += match("add rule linkMother",data.execute_command("RULE.SET", "linkMother", "(haslabel(mother).addE(@,mother,mother_of))" ).decode(), 
                          'Rule for: linkMother Expression: Expression appears to be incorrect!')
    succes_tally += match("add rule linkBrother",data.execute_command("RULE.SET", "linkBrother", "(haslabel(brother).addE(@brother,has_brother,brother_of))" ).decode(), 
                          'Rule for: linkBrother Expression: Expression appears to be incorrect!')
    succes_tally += match("add rule linkSister",data.execute_command("RULE.SET", "linkSister", "(haslabel(sister).addE(@sister,has_sister,sister_of))" ).decode(), 
                          'Rule for: linkSister Expression: Expression appears to be incorrect!')
    succes_tally += match("add rule linkSpouse",data.execute_command("RULE.SET", "linkSpouse", "(haslabel(spouse).addE(@,spouse,spouse_of))" ).decode(), 
                          'Rule for: linkSpouse Expression: Expression appears to be incorrect!')
    succes_tally += match("add rule linkFriend",data.execute_command("RULE.SET", "linkFriend", "(haslabel(friend).addE(@,friend,friend_of))" ).decode(), 
                          'Rule for: linkFriend Expression: Expression appears to be incorrect!')
    succes_tally += match("add rule linkOwner",data.execute_command("RULE.SET", "linkOwner", "(haslabel(owner).addE(@owner,owned_by,owner_of))" ).decode(), 
                          'Rule for: linkOwner Expression: Expression appears to be incorrect!')
    succes_tally += match("add rule linkBoss",data.execute_command("RULE.SET", "linkBoss", "(haslabel(boss).addE(@boss,has_boss,boss_of))" ).decode(), 
                          'Rule for: linkBoss Expression: Expression appears to be incorrect!')
    

    succes_tally += match("RULE.list",data.execute_command("RULE.list"), 
                          "{}".format([[b'name', b'linkBoss', b'rule', b' boss HASLABEL @boss has_boss , boss_of , ADDE .', b'no of applies', 0, b'no of skips', 0, b'no of hits', 0, b'no of misses', 0], [b'name', b'linkBrother', b'rule', b' brother HASLABEL @brother has_brother , brother_of , ADDE .', b'no of applies', 0, b'no of skips', 0, b'no of hits', 0, b'no of misses', 0], [b'name', b'linkFather', b'rule', b' father HASLABEL @ father , father_of , ADDE .', b'no of applies', 0, b'no of skips', 0, b'no of hits', 0, b'no of misses', 0], [b'name', b'linkFriend', b'rule', b' friend HASLABEL @ friend , friend_of , ADDE .', b'no of applies', 0, b'no of skips', 0, b'no of hits', 0, b'no of misses', 0], [b'name', b'linkMother', b'rule', b' mother HASLABEL @ mother , mother_of , ADDE .', b'no of applies', 0, b'no of skips', 0, b'no of hits', 0, b'no of misses', 0], [b'name', b'linkOwner', b'rule', b' owner HASLABEL @owner owned_by , owner_of , ADDE .', b'no of applies', 0, b'no of skips', 0, b'no of hits', 0, b'no of misses', 0], [b'name', b'linkSister', b'rule', b' sister HASLABEL @sister has_sister , sister_of , ADDE .', b'no of applies', 0, b'no of skips', 0, b'no of hits', 0, b'no of misses', 0], [b'name', b'linkSpouse', b'rule', b' spouse HASLABEL @ spouse , spouse_of , ADDE .', b'no of applies', 0, b'no of skips', 0, b'no of hits', 0, b'no of misses', 0]]))
    
    succes_tally += match("LOAD TEXT FILE",data.execute_command("LOAD.TEXT", "CRLF", "TAB_SEPARATED", "FROM", "dataset2.txt", "as_hash").decode(),
                           'OK')
    

    
    succes_tally += match("wait on indexing", data.execute_command("rxIndex wait").decode(), 'OK')
    succes_tally += match("KEYS", data.execute_command("keys", "*"), "{}".format([b'^boss_of:mrslate:barney', b'friend_of:betty:wilma', b'spouse:wilma:fred', b'^wilma', b'boss_of:mrslate:barney', b'^barney', b'^friend:fred:barney', b'roxy', b'mother_of:pebbles:chip', b'^bqgc', b'Perry Masonry', b'^pearl', b'bammbamm', b'boss_of:mrslate:fred', b'^has_boss:fred:mrslate', b'^father_of:bammbamm:chip', b'spouse_of:barney:betty', b'father_of:bammbamm:chip', b'^pebbles', b'friend_of:bammbamm:pebbles', b'^spouse_of:wilma:fred', b'barney', b'father_of:fred:pebbles', b'^owned_by:bqgc:mrslate', b'^mother_of:flo:barney', b'mother:bammbamm:betty', b'^mother:chip:pebbles', b'^owned_by:dino:fred', b'^friend:barney:fred', b'^friend:bammbamm:pebbles', b'^mother:roxy:pebbles', b'friend:betty:wilma', b'^has_boss:barney:mrslate', b'^flo', b'spouse_of:betty:barney', b'owner_of:fred:dino', b'brother_of:mrslate:flo', b'owned_by:bqgc:mrslate', b'^friend:pebbles:bammbamm', b'^mother:bammbamm:betty', b'spouse_of:wilma:fred', b'^mother_of:pebbles:chip', b'father_of:barney:bammbamm', b'bqgc', b'^chip', b'bird', b'^spouse:betty:barney', b'spouse:barney:betty', b'^mother_of:betty:bammbamm', b'^friend_of:betty:wilma', b'fred', b'spouse_of:fred:wilma', b'^friend_of:pebbles:bammbamm', b'friend:pebbles:bammbamm', b'^fred', b'flo', b'wayouts', b'friend:barney:fred', b'father_of:bammbamm:roxy', b'^friend_of:bammbamm:pebbles', b'pebbles', b'^sister_of:flo:mrslate', b'^has_sister:mrslate:flo', b'^friend_of:fred:barney', b'has_brother:roxy:chip', b'has_brother:flo:mrslate', b'^spouse_of:betty:barney', b'has_sister:mrslate:flo', b'mother:roxy:pebbles', b'^roxy', b'mother_of:wilma:pebbles', b'owned_by:dino:fred', b'^spouse:wilma:fred', b'^father_of:bammbamm:roxy', b'friend:fred:barney', b'^spouse_of:barney:betty', b'^has_brother:roxy:chip', b'friend_of:wilma:betty', b'arnold', b'has_boss:barney:mrslate', b'hoppy', b'^spouse_of:fred:wilma', b'^friend:betty:wilma', b'spouse:betty:barney', b'^father_of:fred:pebbles', b'friend_of:fred:barney', b'friend_of:barney:fred', b'^bammbamm', b'father:bammbamm:barney', b'babypuss', b'^friend_of:wilma:betty', b'^has_brother:flo:mrslate', b'^mother:barney:flo', b'betty', b'^mother:wilma:pearl', b'^friend_of:barney:fred', b'owner_of:mrslate:bqgc', b'^father:chip:bammbamm', b'gazoo', b'father:pebbles:fred', b'pearl', b'has_boss:fred:mrslate', b'^owner_of:fred:dino', b'spouse:fred:wilma', b'sister_of:roxy:chip', b'^brother_of:mrslate:flo', b'^betty', b'^has_sister:chip:roxy', b'brother_of:chip:roxy', b'^sister_of:roxy:chip', b'^father:bammbamm:barney', b'mother:chip:pebbles', b'^father_of:barney:bammbamm', b'^mother:pebbles:wilma', b'^mrslate', b'^brother_of:chip:roxy', b'mother:wilma:pearl', b'wilma', b'^mother_of:wilma:pebbles', b'mother:pebbles:wilma', b'^father:roxy:bammbamm', b'mother_of:pearl:wilma', b'^dino', b'dino', b'friend:bammbamm:pebbles', b'Bobby', b'has_sister:chip:roxy', b'mother_of:betty:bammbamm', b'^father:pebbles:fred', b'friend:wilma:betty', b'^boss_of:mrslate:fred', b'mother_of:flo:barney', b'JoeRockhead', b'^friend:wilma:betty', b'^mother_of:pebbles:roxy', b'father:roxy:bammbamm', b'^mother_of:pearl:wilma', b'mother_of:pebbles:roxy', b'mrslate', b'friend_of:pebbles:bammbamm', b'^spouse:barney:betty', b'Stoney Cyrtis', b'^spouse:fred:wilma', b'chip', b'^owner_of:mrslate:bqgc', b'father:chip:bammbamm', b'The Gruesomes', b'mother:barney:flo', b'sister_of:flo:mrslate']))
    succes_tally += match("INDEX KEYS", index.execute_command("keys", "*"), "{}".format([b'_zx_:BEDROCK:NAME', b'_ox_:mother_of:flo:barney', b'_ox_:owner_of:mrslate:bqgc', b'_zx_:OWNED_BY:DINO', b'_ox_:owned_by:dino:fred', b'_zx_:linkFather:RULE', b'_zx_:SPOUSE:WILMA', b'_ox_:bqgc', b'_zx_:MOTHER:ROXY', b'_ox_:has_sister:chip:roxy', b'_ox_:spouse_of:barney:betty', b'_zx_:5:AGE', b'_zx_:FATHER:ROXY', b'_zx_:BETTY:FRIEND', b'_zx_:QUARREL:NAME', b'_zx_:ANIMAL:TYPE', b'_zx_:PUSS:NAME', b'_zx_:BETTY:SPOUSE', b'_zx_:COMPANY AND GRAVEL:NAME', b'_zx_:linkFriend:RULE', b'_zx_:SPOUSE:BARNEY', b'_zx_:OWNER_OF:TYPE', b'_zx_:ROCKHEAD:NAME', b'_ox_:Perry Masonry', b'_zx_:BOSS_OF:TYPE', b'_zx_:FRED:NAME', b'_ox_:mother:chip:pebbles', b'_zx_:WIDTH:50PX', b'_zx_:STORIES:3', b'_ox_:friend:betty:wilma', b'_zx_:FRED:SPOUSE', b'_ox_:JoeRockhead', b'_zx_:FRIEND:FRED', b'_zx_:SPOUSE:FRED', b'_zx_:MASONRY:NAME', b'_zx_:PERRY:NAME', b'_ox_:has_boss:fred:mrslate', b'_zx_:38:AGE', b'_ox_:has_brother:flo:mrslate', b'_ox_:bammbamm', b'_ox_:spouse:fred:wilma', b'_ox_:friend_of:pebbles:bammbamm', b'_zx_::50PX', b'_ox_:mother_of:pebbles:chip', b'_zx_:MOTHER:TYPE', b'_zx_:HAS_BROTHER:ROXY', b'_ox_:friend:barney:fred', b'_ox_:gazoo', b'_ox_:dino', b'_zx_:BAMMBAMM:FRIEND', b'_ox_:spouse:barney:betty', b'_ox_:Bobby', b'_zx_:3:50PX', b'_zx_:HEIGTH:50PX', b'_ox_:sister_of:roxy:chip', b'_ox_:spouse_of:fred:wilma', b'_ox_:fred', b'_ox_:boss_of:mrslate:barney', b'_ox_:bird', b'_zx_:MOTHER:BARNEY', b'_zx_:NEUTRAL:GENDER', b'_ox_:betty', b'_zx_:FATHER:TYPE', b'_ox_:owned_by:bqgc:mrslate', b'_ox_:friend_of:betty:wilma', b'_zx_:ARNOLD:NAME', b'_zx_:FRED:FRIEND', b'_ox_:mother_of:pearl:wilma', b'_zx_:MOTHER_OF:TYPE', b'_ox_:mother:roxy:pebbles', b'_zx_:FATHER:PEBBLES', b'_zx_:SRC:3', b'_zx_:FLO:SISTER', b'_zx_:PEBBLES:FRIEND', b'_zx_:MOTHER:PEBBLES', b'_zx_:55:AGE', b'_zx_:BETTY:MOTHER', b'_ox_:has_brother:roxy:chip', b'_zx_:MALE:GENDER', b'_zx_:OWNED_BY:TYPE', b'_ox_:brother_of:chip:roxy', b'_zx_:%:IMAGE', b'_ox_:mother_of:pebbles:roxy', b'_zx_:FRED:OWNER', b'_zx_:FRED:FATHER', b'_ox_:wayouts', b'_zx_:FRIEND:TYPE', b'_zx_:linkSpouse:RULE', b'_zx_:E:50PX', b'_zx_:DARRIN:NAME', b'_zx_:MOTHER:CHIP', b'_ox_:has_sister:mrslate:flo', b'_zx_:50PX:50PX', b'_zx_:WILMA:NAME', b'_zx_:SISTER_OF:TYPE', b'_zx_:PEBBLES:NAME', b'_zx_:HOPPY:NAME', b'_zx_:HAS_BOSS:BARNEY', b'_zx_:PEARL:MOTHER', b'_zx_:PEBBLES:MOTHER', b'_zx_:37:AGE', b'_zx_:PEARL:NAME', b'_zx_:ROXY:NAME', b'_zx_:HAS_BROTHER:FLO', b'_zx_:FATHER:BAMMBAMM', b'_zx_:CHIP:NAME', b'_ox_:mother:pebbles:wilma', b'_ox_:mother:barney:flo', b'_zx_:BAMMBAMM:NAME', b'_ox_:babypuss', b'_zx_:FATHER_OF:TYPE', b'_zx_:JOE:NAME', b'_zx_:CHIP:BROTHER', b'_ox_:father:chip:bammbamm', b'_zx_:FLO:MOTHER', b'_ox_:friend:wilma:betty', b'_ox_:spouse_of:wilma:fred', b'_ox_:friend:fred:barney', b'_zx_:HAS_SISTER:MRSLATE', b'_zx_:ROXY:SISTER', b'_ox_:mother:bammbamm:betty', b'_zx_:PERSON:TYPE', b'_ox_:father_of:fred:pebbles', b'_zx_:BARNEY:FATHER', b'_ox_:Stoney Cyrtis', b'_zx_:FLO:NAME', b'_zx_:CREATURE:TYPE', b'_ox_:mother_of:wilma:pebbles', b'_zx_:FRIEND:BAMMBAMM', b'_ox_:friend_of:bammbamm:pebbles', b'_ox_:arnold', b'_zx_:WILMA:MOTHER', b'_zx_:BIRD:NAME', b'_zx_:GRUESOMES:NAME', b'_zx_:FRIEND_OF:TYPE', b'_zx_:linkOwner:RULE', b'_zx_:linkBoss:RULE', b'_zx_:CYRTIS:NAME', b'_zx_:HAS_BOSS:TYPE', b'_zx_:FRIEND:PEBBLES', b'_zx_:BAMMBAMM:FATHER', b'_ox_:chip', b'_zx_:BETTY:NAME', b'_zx_:BABY:NAME', b'_zx_:MR:NAME', b'_zx_:MOTHER:WILMA', b'_zx_:HAS_BOSS:FRED', b'_zx_:RUBLE:NAME', b'_zx_:STONEY:NAME', b'_zx_:WAYOUTS:NAME', b'_zx_:linkBrother:RULE', b'_zx_:MRSLATE:BOSS', b'_ox_:friend_of:barney:fred', b'_ox_:boss_of:mrslate:fred', b'_zx_:SPOUSE_OF:TYPE', b'_ox_:spouse:betty:barney', b'_ox_:brother_of:mrslate:flo', b'_ox_:pebbles', b'_zx_:FEMALE:GENDER', b'_zx_:HAS_SISTER:CHIP', b'_ox_:friend:bammbamm:pebbles', b'_zx_:FLINTSTONE:NAME', b'_zx_:SPOUSE:TYPE', b'_ox_:spouse:wilma:fred', b'_zx_:BARNEY:NAME', b'_zx_:FRIEND:WILMA', b'_zx_:BOBBY:NAME', b'_zx_:WILMA:FRIEND', b'_ox_:roxy', b'_ox_:wilma', b'_ox_:friend_of:wilma:betty', b'_ox_:mother:wilma:pearl', b'_ox_:friend_of:fred:barney', b'_zx_:MOTHER:BAMMBAMM', b'_ox_:mother_of:betty:bammbamm', b'_ox_:father_of:barney:bammbamm', b'_zx_:36:AGE', b'_ox_:flo', b'_ox_:sister_of:flo:mrslate', b'_zx_:MAX:50PX', b'_zx_:MRSLATE:OWNER', b'_ox_:hoppy', b'_zx_:BARNEY:FRIEND', b'_zx_:FRIEND:BETTY', b'_ox_:has_boss:barney:mrslate', b'_zx_:BROTHER_OF:TYPE', b'_zx_:RUBBLE:NAME', b'_zx_:BARNEY:SPOUSE', b'_zx_:WILMA:SPOUSE', b'_zx_:THE:NAME', b'_ox_:father_of:bammbamm:roxy', b'_zx_:linkSister:RULE', b'_zx_:7:AGE', b'_zx_:HAS_SISTER:TYPE', b'_ox_:The Gruesomes', b'_zx_:OWNED_BY:BQGC', b'_zx_:GAZOO:NAME', b'_ox_:pearl', b'_ox_:father_of:bammbamm:chip', b'_zx_:WIDTH:3', b'_ox_:father:pebbles:fred', b'_zx_:SLATE:NAME', b'_zx_:FRIEND:BARNEY', b'_ox_:father:bammbamm:barney', b'_ox_:barney', b'_ox_:father:roxy:bammbamm', b'_ox_:owner_of:fred:dino', b'_ox_:spouse_of:betty:barney', b'_zx_:GREAT:NAME', b'_zx_:CIMG:3', b'_zx_:39:AGE', b'_zx_:HAS_BROTHER:TYPE', b'_zx_:SPOUSE:BETTY', b'_ox_:friend:pebbles:bammbamm', b'_zx_:SLAGHOOPLE:NAME', b'_zx_:DINO:NAME', b'_zx_:FATHER:CHIP', b'_zx_:13:AGE', b'_zx_:linkMother:RULE', b'_ox_:mrslate', b'_zx_:MRSLATE:BROTHER']))

    succes_tally += match("rule list", data.execute_command("RULE.LIST"), 
                          "{}".format([[b'name', b'linkBoss', b'rule', b' boss HASLABEL @boss has_boss , boss_of , ADDE .', b'no of applies', 127, b'no of skips', 828, b'no of hits', 17, b'no of misses', 110], [b'name', b'linkBrother', b'rule', b' brother HASLABEL @brother has_brother , brother_of , ADDE .', b'no of applies', 127, b'no of skips', 828, b'no of hits', 12, b'no of misses', 115], [b'name', b'linkFather', b'rule', b' father HASLABEL @ father , father_of , ADDE .', b'no of applies', 127, b'no of skips', 828, b'no of hits', 30, b'no of misses', 97], [b'name', b'linkFriend', b'rule', b' friend HASLABEL @ friend , friend_of , ADDE .', b'no of applies', 127, b'no of skips', 828, b'no of hits', 48, b'no of misses', 79], [b'name', b'linkMother', b'rule', b' mother HASLABEL @ mother , mother_of , ADDE .', b'no of applies', 127, b'no of skips', 828, b'no of hits', 47, b'no of misses', 80], [b'name', b'linkOwner', b'rule', b' owner HASLABEL @owner owned_by , owner_of , ADDE .', b'no of applies', 127, b'no of skips', 828, b'no of hits', 8, b'no of misses', 119], [b'name', b'linkSister', b'rule', b' sister HASLABEL @sister has_sister , sister_of , ADDE .', b'no of applies', 127, b'no of skips', 828, b'no of hits', 13, b'no of misses', 114], [b'name', b'linkSpouse', b'rule', b' spouse HASLABEL @ spouse , spouse_of , ADDE .', b'no of applies', 127, b'no of skips', 828, b'no of hits', 32, b'no of misses', 95]]))


    succes_tally += match("who is linked to BQGC", data.execute_command("rxquery","g:v().as(all).match(use(all),bqgc)","ranked"), 
                          "{}".format([[b'subject', b'mrslate', b'length', b'1', b'object', b'bqgc', b'path', [[b'mrslate', b'0'], [b'owner_of:mrslate:bqgc', b'0.5'], [b'bqgc', b'0.5']]], [b'subject', b'fred', b'length', b'2', b'object', b'bqgc', b'path', [[b'fred', b'0'], [b'has_boss:fred:mrslate', b'0.5'], [b'mrslate', b'0.5'], [b'owner_of:mrslate:bqgc', b'0.5'], [b'bqgc', b'0.5']]], [b'subject', b'flo', b'length', b'2', b'object', b'bqgc', b'path', [[b'flo', b'0'], [b'has_sister:mrslate:flo', b'0.5'], [b'mrslate', b'0.5'], [b'owner_of:mrslate:bqgc', b'0.5'], [b'bqgc', b'0.5']]], [b'subject', b'barney', b'length', b'2', b'object', b'bqgc', b'path', [[b'barney', b'0'], [b'boss_of:mrslate:barney', b'0.5'], [b'mrslate', b'0.5'], [b'owner_of:mrslate:bqgc', b'0.5'], [b'bqgc', b'0.5']]], [b'subject', b'wilma', b'length', b'3', b'object', b'bqgc', b'path', [[b'wilma', b'0'], [b'spouse_of:fred:wilma', b'0.5'], [b'fred', b'0.5'], [b'has_boss:fred:mrslate', b'0.5'], [b'mrslate', b'0.5'], [b'owner_of:mrslate:bqgc', b'0.5'], [b'bqgc', b'0.5']]], [b'subject', b'pebbles', b'length', b'3', b'object', b'bqgc', b'path', [[b'pebbles', b'0'], [b'father_of:fred:pebbles', b'0.5'], [b'fred', b'0.5'], [b'has_boss:fred:mrslate', b'0.5'], [b'mrslate', b'0.5'], [b'owner_of:mrslate:bqgc', b'0.5'], [b'bqgc', b'0.5']]], [b'subject', b'dino', b'length', b'3', b'object', b'bqgc', b'path', [[b'dino', b'0'], [b'owned_by:dino:fred', b'0.5'], [b'fred', b'0.5'], [b'has_boss:fred:mrslate', b'0.5'], [b'mrslate', b'0.5'], [b'owner_of:mrslate:bqgc', b'0.5'], [b'bqgc', b'0.5']]], [b'subject', b'betty', b'length', b'3', b'object', b'bqgc', b'path', [[b'betty', b'0'], [b'spouse_of:betty:barney', b'0.5'], [b'barney', b'0.5'], [b'boss_of:mrslate:barney', b'0.5'], [b'mrslate', b'0.5'], [b'owner_of:mrslate:bqgc', b'0.5'], [b'bqgc', b'0.5']]], [b'subject', b'bammbamm', b'length', b'3', b'object', b'bqgc', b'path', [[b'bammbamm', b'0'], [b'father_of:barney:bammbamm', b'0.5'], [b'barney', b'0.5'], [b'boss_of:mrslate:barney', b'0.5'], [b'mrslate', b'0.5'], [b'owner_of:mrslate:bqgc', b'0.5'], [b'bqgc', b'0.5']]], [b'subject', b'roxy', b'length', b'4', b'object', b'bqgc', b'path', [[b'roxy', b'0'], [b'mother:roxy:pebbles', b'0.5'], [b'pebbles', b'0.5'], [b'father_of:fred:pebbles', b'0.5'], [b'fred', b'0.5'], [b'has_boss:fred:mrslate', b'0.5'], [b'mrslate', b'0.5'], [b'owner_of:mrslate:bqgc', b'0.5'], [b'bqgc', b'0.5']]], [b'subject', b'pearl', b'length', b'4', b'object', b'bqgc', b'path', [[b'pearl', b'0'], [b'mother_of:pearl:wilma', b'0.5'], [b'wilma', b'0.5'], [b'spouse_of:fred:wilma', b'0.5'], [b'fred', b'0.5'], [b'has_boss:fred:mrslate', b'0.5'], [b'mrslate', b'0.5'], [b'owner_of:mrslate:bqgc', b'0.5'], [b'bqgc', b'0.5']]], [b'subject', b'chip', b'length', b'4', b'object', b'bqgc', b'path', [[b'chip', b'0'], [b'mother:chip:pebbles', b'0.5'], [b'pebbles', b'0.5'], [b'father_of:fred:pebbles', b'0.5'], [b'fred', b'0.5'], [b'has_boss:fred:mrslate', b'0.5'], [b'mrslate', b'0.5'], [b'owner_of:mrslate:bqgc', b'0.5'], [b'bqgc', b'0.5']]]]))



    succes_tally += match("who are a mother", data.execute_command("rxquery","g:e(mother_of).subject","ranked"), 
                          "{}".format([[b'key', b'betty', b'type', b'H', b'score', b'1.000000'], [b'key', b'flo', b'type', b'H', b'score', b'1.000000'], [b'key', b'pearl', b'type', b'H', b'score', b'1.000000'], [b'key', b'pebbles', b'type', b'H', b'score', b'1.000000'], [b'key', b'wilma', b'type', b'H', b'score', b'1.000000']]))


    succes_tally += match("who has a mother", data.execute_command("rxquery","g:e(mother_of).object","ranked"), 
                          "{}".format([[b'key', b'bammbamm', b'type', b'H', b'score', b'1.000000'], [b'key', b'barney', b'type', b'H', b'score', b'1.000000'], [b'key', b'chip', b'type', b'H', b'score', b'1.000000'], [b'key', b'pebbles', b'type', b'H', b'score', b'1.000000'], [b'key', b'roxy', b'type', b'H', b'score', b'1.000000'], [b'key', b'wilma', b'type', b'H', b'score', b'1.000000']]))

    if(succes_tally != get_match_calls()): 
        raise AssertionError( "FAILED: SD_103_Business_Rules_Data_Augmentation, {} of {} steps failed".format(get_match_calls() - succes_tally, get_match_calls()))
        